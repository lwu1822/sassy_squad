---
---

@import 'jekyll-theme-cayman';
@import "functionStyle";
@use 'sass:list';

//general dark theme settings
$green: rgb(132, 214, 180);
$fontColor: #d3caca;

p {
   color: $fontColor;
}

body {
   background-color: black;
}

pre {
   background-color: #e0d5d5 !important; 
   color: black !important;
   white-space: pre-line !important;
}

pre > .whiteSpaceFormat {
   white-space: pre !important;
   line-height: 0.1em;
}

code {
   color: black !important;
}

a {
   color: $green;
}


.hiddenText {
   background-color: rgb(112, 110, 110);
   color: rgb(112, 110, 110); 
}

.showHiddenText {
   background-color: black;
   color: $fontColor;
}




//sass.md settings
%buttonAnimation:hover {
  transform: scale(1.15);
}

.flex {
   display: flex; 
}

@mixin buttonLayout($innerColor, $outerColor) {
   background: radial-gradient($innerColor, $outerColor);
   width: 15em;
   height: 15em;
   color: #ffffff; 
   margin-right: 10%;
   border-radius: 2em;
}

.gettingStartedButton, .nestingButton, .extendButton, .mixinButton, .functionButton, .importButton {
   @extend %buttonAnimation;
}

.gettingStartedButton {
   @include buttonLayout(#3a9fa7, #8ae0e6);
}

.nestingButton {
   @include buttonLayout(#1539db, #8a8ce6);
}

.extendButton {
   @include buttonLayout(#643aa7, #d78ae6);
}

.mixinButton {
   @include buttonLayout(#641379, #aa6eb6);
}

.functionButton {
   @include buttonLayout(#a73a95, #d78ae6);
}

.importButton {
   @include buttonLayout(#b93737, #e68ab8);
}

//nesting.html styling
.font {
   .title {
      font-family: "Times New Roman", serif;
      font-size: 3em;
   }

   .text {
      font-family: "Times New Roman", serif;
      font-size: 1em;
   }
}




//general button settings
%btnLayout {
  font-size: 1rem;
  font-weight: 350;
  
  transition-property: transform;
  transition-duration: 0.3s;
  transition-delay: ease;
  transition-delay: 0s;
  background-color: 0.3s;
  color: 0.3s;

}

.btn {
   @extend %btnLayout;
   @extend %btn; 
}


%btn:hover {
  transform: translateY(-10px);
  background-color: var(--clr-accent);
  color: var(--light);
}

.backButton {
   @extend %btnLayout;
   background-color: $green;
   width: 5em;
   height: 2em;
   border-radius: 0.5em;
   color: black;
}

.backButton:hover {
   color: rgb(65, 63, 63);
   transform: translateY(-10px);
}


// matching starts here
// Kudos to https://marina-ferreira.github.io/tutorials/js/memory-game/. We wouldn't have gotten far without a tutorial.

.board{
   display: flex;
   flex-wrap: wrap;
}

.box{
   height: 16%;
   width: 20%;
   position: relative;
   margin: auto
   display; 
   flex-wrap: wrap;
   perspective: ____px;
}

%matchingButton {
   width: 8em;
   height: 4em;
   color: #ffffff;
   background: #95cce8;
}

%matchingButton:hover {
   background: #85b9d4;
}

.Flipped {
   width: 8em;
   height: 4em;
   //position: absolute;
}

.Card {
   @extend %matchingButton;
   position: absolute;
}

// matching ends here

@keyframes slideInLeft {
   from {
      transform: translateX(-300px);
   }

   to{
      transform: translateX(0);
   }
}

@keyframes slideInRight {
   from {
      transform: translateX(300px);
   }

   to{
      transform: translateX(0);
   }
}

.slideInLeft {
   animation-name: slideInLeft;
   animation-duration: 2s;
   animation-timing-function: ease;
   animation-iteration-count: 1;
   animation-direction: normal;
   animation-fill-mode: both;
}

.slideInRight {
   animation-name: slideInRight;
   animation-duration: 2s;
   animation-timing-function: ease;
   animation-iteration-count: 1;
   animation-direction: normal;
   animation-fill-mode: both;
}


// matching ends here



// game
* {
   padding: 0;
   margin: 0;
   box-sizing: border-box;
 } 
 
 .memory-game {
   min-width: 800px;
   min-height: 30px;
   margin: auto;
   display: flex;
   flex-wrap: wrap;
   perspective: 300px;
 }
 
 .memory-card {
   width: calc(% - px);
   height: calc(% - px);
   margin: 50px;
   position: relative;
   transform: scale(1);
   transform-style: preserve-3d;
   transition: transform .5s;
   box-shadow: 1px 1px 1px rgba(0,0,0,.3);
 }
 
 .memory-card:active {
   transform: scale(0.97);
   transition: transform .2s;
 }
 
 .memory-card.flip {
   transform: rotateY(180deg);
 }
 
 .front-face,
 .back-face {
   width: 100%;
   height: 100%;
   position: absolute;
   backface-visibility: hidden;
 }
 
 .front-face {
   transform: rotateY(180deg);
 }
